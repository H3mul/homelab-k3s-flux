version: "3"

vars:
  PROJECT_DIR:
    sh: "git rev-parse --show-toplevel"

includes:
  templates: .taskfiles/templates.yaml
  refactor: .taskfiles/refactor-helmrelease.yaml

tasks:
  default:
    silent: true
    cmds:
      - go-task -l

  k-seal:
    desc: kubeseal a secret yaml file
    preconditions:
      - sh: "test '{{.file}}' != '<no value>'"
        msg: "Variable .file is not set"
      - sh: "test -f {{.file}}"
        msg: "File {{.file}} does not exist"
    vars:
      filename:
        sh: basename {{.file}}
      dir:
        sh: dirname {{.file}}
    cmds:
      - kubeseal --cert sealed-secrets.pem < {{.file}} > {{.dir}}/sealed-{{.filename}} -o yaml


  k-events:
    desc: Watch kubernetes events in namespace
    vars:
      namespace: "{{.ns}}"
    preconditions:
      - sh: "[ '{{.namespace}}' != '<no value>' ]"
        msg: "Variable .namespace is not set"
    cmds:
      - watch "kubectl -n {{.namespace}} get events --sort-by='{.lastTimestamp}' | tail -n 15"

  k-init-pg:
    desc: Manually initialize postgres-cluster using postgres-initdb
    vars:
      POSTGRES_SUPER_USER:
        sh: kubectl -n cloudnative-pg get secret postgres-cluster-superuser -o go-template="{{ "{{" }}.data.username | base64decode{{ "}}" }}"
      POSTGRES_SUPER_PASS:
        sh: kubectl -n cloudnative-pg get secret postgres-cluster-superuser -o go-template="{{ "{{" }}.data.password | base64decode{{ "}}" }}"
    cmds:
      - |
        docker run --rm \
          -e INIT_POSTGRES_SUPER_USER="{{.POSTGRES_SUPER_USER}}" \
          -e INIT_POSTGRES_SUPER_PASS="{{.POSTGRES_SUPER_PASS}}" \
          -e INIT_POSTGRES_HOST="{{.pghost}}" \
          -e INIT_POSTGRES_DB="{{.dbname}}" \
          -e INIT_POSTGRES_USER="{{.dbuser}}" \
          -e INIT_POSTGRES_PASS="{{.dbpass}}" \
          ghcr.io/home-operations/postgres-init:17.5.0

  k-init-mysql:
    desc: Manually initialize postgres-cluster using mysql-init
    vars:
      MYSQL_SUPER_USER: root
      MYSQL_SUPER_PASS:
        sh: kubectl -n mysql-operator get secret mysql-main -o go-template="{{ "{{" }}.data.ROOT_PASSWORD | base64decode{{ "}}" }}"
    cmds:
      - |
        docker run --rm \
          -e INIT_MYSQL_SUPER_USER="{{.MYSQL_SUPER_USER}}" \
          -e INIT_MYSQL_SUPER_PASS="{{.MYSQL_SUPER_PASS}}" \
          -e INIT_MYSQL_HOST="{{.host}}" \
          -e INIT_MYSQL_DBNAME="{{.dbname}}" \
          -e INIT_MYSQL_USER="{{.dbuser}}" \
          -e INIT_MYSQL_PASS="{{.dbpass}}" \
          ghcr.io/h3mul/mysql-init:rolling

  k-provision-resources:
    desc: Provision/update the base resources required for the cluster (CNI, CSR approver)
    dir: '{{.PROJECT_DIR}}'
    cmds:
      - kubectl kustomize --enable-helm ./provision/kustomizations | kubectl apply -f -
      - rm -r ./provision/kustomizations/*/charts
