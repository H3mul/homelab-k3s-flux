apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: minio-helm-chart-value-overrides
  namespace: minio
data:
  values.yaml: |-
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2023-02-27T18-10-45Z
    env:
      TZ: ${TIMEZONE}
      MINIO_UPDATE: "off"
      # MINIO_PROMETHEUS_URL: https://prometheus.${CLUSTER_DOMAIN}
      # MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_PROMETHEUS_AUTH_TYPE: public
      MINIO_BROWSER_REDIRECT_URL: https://minio.${CLUSTER_DOMAIN}
      MINIO_SERVER_URL: https://s3.${CLUSTER_DOMAIN}
    envFrom:
      - secretRef:
          name: minio-server-credentials
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        labels:
          job: minio-job
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: &api-port 9000
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: api
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 30s 
            scrapeTimeout: 10s
            # bearerTokenSecret:
            #   name: minio-secret
            #   key: MINIO_PROMETHEUS_TOKEN
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /minio/health/live
            port: *api-port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: traefik

        hosts:
          - host: &console-host "minio.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *console-port
        tls:
          - hosts:
              - *console-host
            secretName: letsencrypt-wildcard-cert-prod
      s3:
        enabled: true
        ingressClassName: traefik
        annotations:
          # nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          # nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          # nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   chunked_transfer_encoding off;
          # hajimari.io/enable: "false"
        hosts:
          - host: &host-api "s3.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *api-port
        tls:
          - hosts:
              - *host-api
            secretName: letsencrypt-wildcard-cert-prod
    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    #   fsGroupChangePolicy: "OnRootMismatch"
    #   supplementalGroups:
    #     - 100
    persistence:
      config:
        enabled: true
        existingClaim: minio-data
        mountPath: /data
    # resources:
    #   requests:
    #     memory: 100Mi
    #     cpu: 100m
    #   limits:
    #     memory: 750Mi