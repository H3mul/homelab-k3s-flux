apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: openfaas
  namespace: openfaas
spec:
  chart:
    spec:
      chart: openfaas
      version: 14.2.x
      sourceRef:
        kind: HelmRepository
        name: openfaas-charts
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: openfaas
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  values:
    # Pasted from:
    # https://github.com/openfaas/faas-netes/blob/46f7f83828b71647e9809bd158a32ed5a45b912f/chart/openfaas/values.yaml

    functionNamespace: openfaas-fn  # Default namespace for functions

    # Contact us via https://www.openfaas.com/support to purchase a license
    openfaasPro: false

    httpProbe: true               # Setting to true will use HTTP for readiness and liveness probe on the OpenFaaS core components

    # set clusterRole: true for:
    ## Multiple-namespaces
    ## CPU/RAM metrics in OpenFaaS API
    clusterRole: false

    createCRDs: true              # Set to false if applying CRDs in another way

    basic_auth: true              # Authentication for core components, no good reason to disable this
    rbac: true                    # Kubernetes RBAC, no good reason to disable this
    generateBasicAuth: false       # Set to false if applying credentials separately from the chart, otherwise set to true
    securityContext: true

    exposeServices: false
    serviceType: ClusterIP       # serviceType for OpenFaaS gateway
    async: true                  # No known reason to disable this, kept for legacy reasons 

    queueMode: ""                # Set to `jetstream` to run the async system backed by NATS JetStream. By default the async system uses NATS Streaming 

    # create pod security policies for OpenFaaS control plane
    # https://kubernetes.io/docs/concepts/policy/pod-security-policy/
    psp: false

    # image pull policy for openfaas components, can change to `IfNotPresent` for an air-gapped environment
    openfaasImagePullPolicy: "Always"

    functions:
      imagePullPolicy: "Always"    # Image pull policy for deployed functions, for OpenFaaS Pro you can also set: IfNotPresent and Never.
      httpProbe: true              # Setting to true will use HTTP for readiness and liveness probe on function pods
      setNonRootUser: false        # It's recommended to set this to "true", but test your images before committing to it
      readinessProbe:
        initialDelaySeconds: 0
        timeoutSeconds: 1           # Tuned-in to run checks early and quickly to support fast cold-start from zero replicas
        periodSeconds: 2            # Reduce to 1 for a faster cold-start, increase higher for lower-CPU usage
        successThreshold: 1
        failureThreshold: 3
      livenessProbe:
        initialDelaySeconds: 0
        timeoutSeconds: 1
        periodSeconds: 2           # Reduce to 1 for a faster cold-start, increase higher for lower-CPU usage
        failureThreshold: 3

    gatewayPro:
      image: ghcr.io/openfaasltd/gateway:0.4.40@sha256:c7c92bfe5837e62e4d79b8a23914816296a7133e9ceaa5058b91ee70b729e1a2

    gateway:
      image: ghcr.io/openfaas/gateway:0.27.12@sha256:fe62d9e15c4d8743f8049d83f5c2f82a28bd12ede7dd66e5c51261161adb5980
      readTimeout: "1m05s"
      writeTimeout: "1m05s"
      upstreamTimeout: "1m"  # Must be smaller than read/write_timeout
      replicas: 1
      scaleFromZero: true
      # change the port when creating multiple releases in the same baremetal cluster
      nodePort: 31112
      maxIdleConns: 1024
      maxIdleConnsPerHost: 1024
      directFunctions: true
      # Custom logs provider url. For example openfaas-loki would be
      # "http://ofloki-openfaas-loki.openfaas:9191/"
      logsProviderURL: ""

      # Set to true for Istio users as a workaround for:
      # https://github.com/openfaas/faas/issues/1721
      probeFunctions: false

      # See the HPA rule from the Customer Community
      # https://github.com/openfaas/customers/blob/master/gateway-hpa.yaml
      resources:
        requests:
          memory: "120Mi"
          cpu: "50m"

      readinessProbe:
        initialDelaySeconds: 1
        periodSeconds: 5
        timeoutSeconds: 5
        failureThreshold: 3
        successThreshold: 1

      livenessProbe:
        initialDelaySeconds: 1
        periodSeconds: 5
        timeoutSeconds: 5
        failureThreshold: 3
        successThreshold: 1

    # For OpenFaaS Pro and the Function CRD
    operator:
      image: ghcr.io/openfaasltd/faas-netes:0.5.68@sha256:378c64e73d2251fc8cf686d0f630856a05387ace284358bf8fbf8d95a15c9ec2
      create: false
      resources:
        requests:
          memory: "120Mi"
          cpu: "50m"

    faasnetesPro:
      image: ghcr.io/openfaasltd/faas-netes:0.5.68@sha256:378c64e73d2251fc8cf686d0f630856a05387ace284358bf8fbf8d95a15c9ec2

    # For the Community Edition
    faasnetes:
      image: ghcr.io/openfaas/faas-netes:0.18.13@sha256:c36a871008fc831ba289aaf5f6fe7b2bb978c6d0fef31c4f5582c4bbe5b0f68e
      resources:
        requests:
          memory: "120Mi"
          cpu: "50m"

    # The values for jetstreamQueueWorker are merged with those under
    # the "queueWorkerPro" and "queueWorker" section
    #  
    # Enable automatically when nats.queueMode is set to "jetstream"
    jetstreamQueueWorker:
      image: ghcr.io/openfaasltd/jetstream-queue-worker:0.3.46@sha256:4136f7098a177c64dcdffcf834725d02bc3d9e115e558e90961abf987fd0516f
      durableName: "faas-workers"
      # Configure the max waiting pulls for the queue-worker JetStream consumer. 
      # The value should be at least max_inflight * replicas.
      # Note that this value can not be updated once the consumer is created.
      maxWaiting: 512
      logs:
        debug: false
        format: "console"

      # Set pprof to listen on port 6000 to debug issues
      pprof: false

    # OpenFaaS Pro
    # The values for queueWorkerPro are merged with those under
    # the "queueWorker" section
    #
    # To deploy additional named queues, see the "queue-worker"
    # chart
    #
    # Enabled automatically when openfaasPro is set to true
    queueWorkerPro:
      image: ghcr.io/openfaasltd/queue-worker:0.4.0@sha256:69871687fe8c3c49c5f95320a1d5f12e692de6b37578f449ad3ae698f94a47cf
      maxRetryAttempts: "10"
      maxRetryWait: "120s"
      initialRetryWait: "10s"
      # 408 Request Timeout message
      # 429 Too Many Requests
      # 500 Internal Server Error
      # 502 Bad Gateway
      # 503 Service Unavailable
      # 504 Gateway Timeout
      httpRetryCodes: "408,429,500,502,503,504"
      insecureTLS: false
      printRequestBody: false
      printResponseBody: false
      # Control the concurrent invocations
      maxInflight: 50

    # Community Edition, maxInflight is 1
    # Name of shared queue is "faas-request"
    queueWorker:
      image: ghcr.io/openfaas/queue-worker:0.14.2@sha256:c18da04d70f65fb82ad2c62c560eded2051cac61c34d88e65a54fb943868417f
      # Control HA of queue-worker
      replicas: 1
      queueGroup: "faas"
      ackWait: "60s"
      resources:
        requests:
          memory: "120Mi"
          cpu: "50m"

    # OpenFaaS Pro
    ## Advanced auto-scaler for scaling functions on RPS, CPU and in-flight requests
    ## Includes: scale to zero
    autoscaler:
      image: ghcr.io/openfaasltd/autoscaler:0.3.18@sha256:3870bdce192b9af7923e79a75e83844b8c43e38b45ff27bfa5823761527abd0a
      replicas: 1
      enabled: true
      resources:
        requests:
          memory: "128Mi"
        limits:
          memory: "256Mi"
      # When disableHorizontalScaling is set to true, then the autoscaler will 
      # only scale to zero, without scaling replicas between the defined Min and Max
      # count for the function
      disableHorizontalScaling: false

    # OpenFaaS Pro
    ## To use with port-forwarding, set publicURL to 
    ## http://127.0.0.1
    dashboard:
      image: ghcr.io/openfaasltd/openfaas-dashboard:0.5.34@sha256:8a10aaa463aa8754632fb321e1e89036aff685b7a0305844e7e474f233274cc9
      publicURL: https://dashboard.example.com
      # Name of signing key secret for sessions.
      # Leave blank for development, see https://docs.openfaas.com/openfaas-pro/dashboard/ for production and staging.
      signingKeySecret: ""
      replicas: 1
      enabled: false
      logs:
        debug: false
        format: "console"
      resources:
        requests:
          memory: "128Mi"
        limits:
          memory: "256Mi"

    # OpenFaaS Enterprise (OpenFaaS IAM)
    # OIDC plugin for authentication on the OpenFaaS REST API
    oidcAuthPlugin:
      image: ghcr.io/openfaasltd/openfaas-oidc-plugin:0.7.9@sha256:9b59c96a6446ef81cd23c036de4909e9f13d146f63ecc99cbd0448a7bfa58a2f
      insecureTLS: false
      verbose: true # debug setting
      replicas: 1
      securityContext: true
      resources:
        requests:
          memory: "120Mi"
          cpu: "50m"

    iam:
      enabled: false
      # systemIssuer represents the issuer for the OpenFaaS system components
      systemIssuer:
        url: https://gateway.example.com

      # dashboardIssuer represents the issuer for the OpenFaaS dashboard
      dashboardIssuer:
        url: https://example.eu.auth0.com
        clientId: ""
        clientSecret: ""
        scopes:
          - openid
          - profile
          - email

      # kubernetesIssuer represents the Kubernetes service account issuer.
      kubernetesIssuer:
        create: true
        url: https://kubernetes.default.svc.cluster.local
        tokenExpiry: 2h

    prometheus:
      image: prom/prometheus:v2.55.1@sha256:2659f4c2ebb718e7695cb9b25ffa7d6be64db013daba13e05c875451cf51b0d3
      create: true
      resources:
        requests:
          memory: "512Mi"
      annotations: {}

    alertmanager:
      image: prom/alertmanager:v0.27.0@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
      create: true
      resources:
        requests:
          memory: "25Mi"
        limits:
          memory: "50Mi"

    stan:
      # Image used for the NATS Streaming when using the deprecated 
      # support in the Community Edition (CE)
      image: nats-streaming:0.25.6@sha256:0ad6861379c936d508e2aad174fb402c170ec0b28c8f634549dea4b09f0451cf

    # NATS (required for async)
    nats:
      channel: "faas-request"
      # Stream replication is set to 1 by default. This is only recommended for development.
      # For production a value of at least 3 is recommended for NATS JetStream to be resilient.
      # See https://github.com/openfaas/openfaas-pro/blob/master/jetstream.md
      streamReplication: 1
      external:
        clusterName: ""
        enabled: false
        host: ""
        port: ""
      # The version of NATS Core used with OpenFaaS Pro and JetStream
      image: nats:2.10.29@sha256:90e0218d56c985136af5a251758962585c8f82e64d2a222bb3a0525f28f076a4
      enableMonitoring: false
      metrics:
        # Should stay off by default because the exporter is not multi-arch (yet)
        enabled: false
        image: natsio/prometheus-nats-exporter:0.15.0@sha256:1f6787754b8b083f271adea4bb699b9c9e21279c89d903f1710f7647c604f145
      resources:
        requests:
          memory: "120Mi"

    # ingress configuration
    ingress:
      enabled: true
      ## For k8s >= 1.18 you need to specify the pathType
      ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
      #pathType: ImplementationSpecific

      # Used to create Ingress record (should be used with exposeServices: false).
      hosts:
      - host: &host "openfaas.${CLUSTER_DOMAIN}"
        serviceName: gateway
        servicePort: 8080
        path: /
      tls:
      - secretName: letsencrypt-wildcard-cert-prod
        hosts:
        - *host
      annotations:
        kubernetes.io/ingress.class: nginx

      ## You can specify the ingress controller by using the ingressClassName
      #ingressClassName: nginx

    # ingressOperator (optional) – component to have specific FQDN and TLS for Functions
    # https://github.com/openfaas-incubator/ingress-operator
    ingressOperator:
      image: ghcr.io/openfaas/ingress-operator:0.8.3@sha256:db051d49f5d80b45a87ac379e137fe61a3001526f7e11e91b837d79767ba88ac
      replicas: 1
      create: false
      resources:
        requests:
          memory: "25Mi"

    nodeSelector: {}

    tolerations: []

    affinity: {}

    kubernetesDNSDomain: cluster.local

    istio:
      mtls: false

    gatewayExternal:
      annotations: {}

    k8sVersionOverride: "" #  Allow kubeVersion to be overridden for the ingress creation