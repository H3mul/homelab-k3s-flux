apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 65.8.x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: kube-prometheus-stack
  values:
    # Values:
    # https://github.com/prometheus-community/helm-charts/blob/f3302011625609257f0857a6f651f6b71399d567/charts/kube-prometheus-stack/values.yaml

    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        pathType: Prefix
        hosts:
          - &host prometheus.${CLUSTER_DOMAIN}
        tls:
          - secretName: letsencrypt-wildcard-cert-prod
            hosts:
              - *host
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: __replica__
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        image:
          registry: quay.io
          repository: prometheus/prometheus
        retention: 30d
        retentionSize: 18GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: truenas-ssd-iscsi
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 25Gi
            selector: {}

        additionalScrapeConfigs:
          - job_name: openwrt
            static_configs:
              - targets: [ '${OPENWRT_ROUTER}:9100' ]

          - job_name: opnsense
            static_configs:
              - targets: [ '${OPNSENSE_ROUTER}:9100' ]
              
          - job_name: octoprint
            static_configs:
              - targets: [ '${OCTOPRINT_ADDRESS}:9100' ]

    nodeExporter:
      enabled: true
      operatingSystems:
        darwin:
          enabled: false

    prometheus-node-exporter:
      podLabels:
        jobLabel: kube

    grafana:
      enabled: false
      forceDeployDashboards: true