apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: penpot
  namespace: penpot
spec:
  chart:
    spec:
      chart: penpot
      version: 0.6.0
      sourceRef:
        kind: HelmRepository
        name: penpot
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: penpot
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
              name: penpot-backend
            patch: |
              - op: add
                path: /spec/template/spec/initContainers
                value:
                  - name: init-db
                    image: ghcr.io/onedr0p/postgres-init:16.6
                    env:
                      - name: INIT_POSTGRES_HOST
                        value: postgres-cluster-rw.cloudnative-pg.svc.cluster.local
                      - name: INIT_POSTGRES_SUPER_USER
                        valueFrom:
                          secretKeyRef:
                            name: postgres-cluster-superuser
                            key: username
                      - name: INIT_POSTGRES_SUPER_PASS
                        valueFrom:
                          secretKeyRef:
                            name: postgres-cluster-superuser
                            key: password
                      - name: INIT_POSTGRES_DBNAME
                        valueFrom:
                          secretKeyRef:
                            name: penpot-postgres-credentials
                            key: POSTGRES_DB
                      - name: INIT_POSTGRES_USER
                        valueFrom:
                          secretKeyRef:
                            name: penpot-postgres-credentials
                            key: POSTGRES_USER
                      - name: INIT_POSTGRES_PASS
                        valueFrom:
                          secretKeyRef:
                            name: penpot-postgres-credentials
                            key: POSTGRES_PASS

  valuesFrom:
  - kind: Secret
    name: penpot-postgres-credentials
    valuesKey: POSTGRES_DB
    targetPath: config.postgresql.database

  values:
    # Values:
    # https://github.com/penpot/penpot-helm/blob/2d736b77cc53e2db89bde678b0890e99f1fc779c/charts/penpot/values.yaml

    global:
      redisEnabled: true

    config:
      # -- The public domain to serve Penpot on.
      # **IMPORTANT:** Set `disable-secure-session-cookies` in the flags if you plan on serving it on a non HTTPS domain.
      # @section -- Configuration parameters
      publicUri: "https://penpot.${CLUSTER_DOMAIN}"
      # -- The feature flags to enable. Check [the official docs](https://help.penpot.app/technical-guide/configuration/) for more info.
      # @section -- Configuration parameters
      flags: "enable-registration enable-login-with-password disable-email-verification disable-smtp disable-secure-session-cookies"
      # -- A random secret key needed for persistent user sessions. Generate with `python3 -c "import secrets; print(secrets.token_urlsafe(64))"` for example.
      # @section -- Configuration parameters
      # apiSecretKey: "kmZ96pAxhTgk3HZvvBkPeVTspGBneKVLEpO_3ecORs_gwACENZ77z05zCe7skvPsQ3jI3QgkULQOWCuLjmjQsg"
      # -- Comma separated list of allowed domains to register. Empty to allow all domains.
      # @section -- Configuration parameters
      registrationDomainWhitelist: ""
      # -- Whether to enable sending of anonymous telemetry data.
      # @section -- Configuration parameters
      telemetryEnabled: false
      # -- Add custom resolver for frontend. e.g. 192.168.1.1
      # @section -- Configuration parameters
      internalResolver: ""

      postgresql:
        # -- The PostgreSQL host to connect to. Empty to use dependencies.
        # @section -- Configuration parameters
        host: "postgres-cluster-rw.cloudnative-pg.svc.cluster.local"  # Ex.: "postgresql.penpot.svc.cluster.local"
        # -- The PostgreSQL host port to use.
        # @section -- Configuration parameters
        port: 5432
        # -- The database username to use.
        # @section -- Configuration parameters
        # username: "penpot"
        # -- The database password to use.
        # @section -- Configuration parameters
        # password: "penpot"
        # -- The PostgreSQL database to use.
        # @section -- Configuration parameters
        # database: "penpot"
        # -- The name of an existing secret.
        # @section -- Configuration parameters
        existingSecret: "penpot-postgres-credentials"
        secretKeys:
          # -- The username key to use from an existing secret.
          # @section -- Configuration parameters
          usernameKey: "POSTGRES_USER"
          # -- The password key to use from an existing secret.
          # @section -- Configuration parameters
          passwordKey: "POSTGRES_PASS"

      redis:
        # -- The Redis host to connect to. Empty to use dependencies
        # @section -- Configuration parameters
        host: ""  # Ex.: "redis-headless.penpot.svc.cluster.local"
        # -- The Redis host port to use.
        # @section -- Configuration parameters
        port: 6379
        # -- The Redis database to connect to.
        # @section -- Configuration parameters
        database: "0"

      assets:
        # -- The storage backend for assets to use. Use `assets-fs` for filesystem, and `assets-s3` for S3.
        # @section -- Configuration parameters
        storageBackend: "assets-fs"
        filesystem:
          # -- The storage directory to use if you chose the filesystem storage backend.
          # @section -- Configuration parameters
          directory: "/opt/data/assets"
        s3:
          # -- The S3 access key ID to use if you chose the S3 storage backend.
          # @section -- Configuration parameters
          accessKeyID: ""
          # -- The S3 secret access key to use if you chose the S3 storage backend.
          # @section -- Configuration parameters
          secretAccessKey: ""
          # -- The S3 region to use if you chose the S3 storage backend.
          # @section -- Configuration parameters
          region: ""
          # -- The name of the S3 bucket to use if you chose the S3 storage backend.
          # @section -- Configuration parameters
          bucket: ""
          # -- The S3 endpoint URI to use if you chose the S3 storage backend.
          # @section -- Configuration parameters
          endpointURI: ""
          # -- The name of an existing secret.
          # @section -- Configuration parameters
          existingSecret: ""
          secretKeys:
            # -- The S3 access key ID to use from an existing secret.
            # @section -- Configuration parameters
            accessKeyIDKey: ""
            # -- The S3 secret access key to use from an existing secret.
            # @section -- Configuration parameters
            secretAccessKey: ""
            # -- The S3 endpoint URI to use from an existing secret.
            # @section -- Configuration parameters
            endpointURIKey: ""

      smtp:
        # -- Whether to enable SMTP configuration. You also need to add the 'enable-smtp' flag to the PENPOT_FLAGS variable.
        # @section -- Configuration parameters
        enabled: false
        # -- The SMTP default email to send from.
        # @section -- Configuration parameters
        defaultFrom: ""
        # -- The SMTP default email to reply to.
        # @section -- Configuration parameters
        defaultReplyTo: ""
        # -- The SMTP host to use.
        # @section -- Configuration parameters
        host: ""
        # -- The SMTP host port to use.
        # @section -- Configuration parameters
        port: ""
        # -- The SMTP username to use.
        # @section -- Configuration parameters
        username: ""
        # -- The SMTP password to use.
        # @section -- Configuration parameters
        password: ""
        # -- Whether to use TLS for the SMTP connection.
        # @section -- Configuration parameters
        tls: true
        # -- Whether to use SSL for the SMTP connection.
        # @section -- Configuration parameters
        ssl: false
        # -- The name of an existing secret.
        # @section -- Configuration parameters
        existingSecret: ""
        secretKeys:
          # -- The SMTP username to use from an existing secret.
          # @section -- Configuration parameters
          usernameKey: ""
          # -- The SMTP password to use from an existing secret.
          # @section -- Configuration parameters
          passwordKey: ""

      providers:
        google:
          # -- Whether to enable Google configuration. To enable Google auth, add `enable-login-with-google` to the flags.
          # @section -- Configuration parameters
          enabled: false
          # -- The Google client ID to use. To enable Google auth, add `enable-login-with-google` to the flags.
          # @section -- Configuration parameters
          clientID: ""
          # -- The Google client secret to use. To enable Google auth, add `enable-login-with-google` to the flags.
          # @section -- Configuration parameters
          clientSecret: ""
        github:
          # -- Whether to enable GitHub configuration. To enable GitHub auth, also add `enable-login-with-github` to the flags.
          # @section -- Configuration parameters
          enabled: false
          # -- The GitHub client ID to use.
          # @section -- Configuration parameters
          clientID: ""
          # -- The GitHub client secret to use.
          # @section -- Configuration parameters
          clientSecret: ""
        gitlab:
          # -- Whether to enable GitLab configuration. To enable GitLab auth, also add `enable-login-with-gitlab` to the flags.
          # @section -- Configuration parameters
          enabled: false
          # -- The GitLab base URI to use.
          # @section -- Configuration parameters
          baseURI: "https://gitlab.com"
          # -- The GitLab client ID to use.
          # @section -- Configuration parameters
          clientID: ""
          # -- The GitLab client secret to use.
          # @section -- Configuration parameters
          clientSecret: ""
        oidc:
          # -- Whether to enable OIDC configuration. To enable OpenID Connect auth, also add `enable-login-with-oidc` to the flags.
          # @section -- Configuration parameters
          enabled: false
          # -- The OpenID Connect base URI to use.
          # @section -- Configuration parameters
          baseURI: ""
          # -- The OpenID Connect client ID to use.
          # @section -- Configuration parameters
          clientID: ""
          # -- The OpenID Connect client secret to use.
          # @section -- Configuration parameters
          clientSecret: ""
          # -- Optional OpenID Connect auth URI to use. Auto discovered if not provided.
          # @section -- Configuration parameters
          authURI: ""
          # -- Optional OpenID Connect token URI to use. Auto discovered if not provided.
          # @section -- Configuration parameters
          tokenURI: ""
          # -- Optional OpenID Connect user URI to use. Auto discovered if not provided.
          # @section -- Configuration parameters
          userURI: ""
          # -- Optional OpenID Connect roles to use. If no role is provided, roles checking  disabled.
          # @section -- Configuration parameters
          roles: "role1 role2"
          # -- Optional OpenID Connect roles attribute to use. If not provided, the roles checking will be disabled.
          # @section -- Configuration parameters
          rolesAttribute: ""
          # -- Optional OpenID Connect scopes to use. This settings allow overwrite the required scopes, use with caution because penpot requres at least `name` and `email` attrs found on the user info. Optional, defaults to `openid profile`.
          # @section -- Configuration parameters
          scopes: "scope1 scope2"
          # -- Optional OpenID Connect name attribute to use. If not provided, the `name` prop will be used.
          # @section -- Configuration parameters
          nameAttribute: ""
          # -- Optional OpenID Connect email attribute to use. If not provided, the `email` prop will be used.
          # @section -- Configuration parameters
          emailAttribute: ""
        ldap:
          # -- Whether to enable LDAP configuration. To enable LDAP, also add `enable-login-with-ldap` to the flags.
          # @section -- Configuration parameters
          enabled: false
          # -- The LDAP host to use.
          # @section -- Configuration parameters
          host: "ldap"
          # -- The LDAP port to use.
          # @section -- Configuration parameters
          port: 10389
          # -- Whether to use SSL for the LDAP connection.
          # @section -- Configuration parameters
          ssl: false
          # -- Whether to utilize StartTLS for the LDAP connection.
          # @section -- Configuration parameters
          startTLS: false
          # -- The LDAP base DN to use.
          # @section -- Configuration parameters
          baseDN: "ou=people,dc=planetexpress,dc=com"
          # -- The LDAP bind DN to use.
          # @section -- Configuration parameters
          bindDN: "cn=admin,dc=planetexpress,dc=com"
          # -- The LDAP bind password to use.
          # @section -- Configuration parameters
          bindPassword: "GoodNewsEveryone"
          # -- The LDAP user query to use.
          # @section -- Configuration parameters
          userQuery: "(&(|(uid=:username)(mail=:username))(memberOf=cn=penpot,ou=groups,dc=my-domain,dc=com))"
          # -- The LDAP attributes username to use.
          # @section -- Configuration parameters
          attributesUsername: "uid"
          # -- The LDAP attributes email to use.
          # @section -- Configuration parameters
          attributesEmail: "mail"
          # -- The LDAP attributes fullname to use.
          # @section -- Configuration parameters
          attributesFullname: "cn"
          # -- The LDAP attributes photo format to use.
          # @section -- Configuration parameters
          attributesPhoto: "jpegPhoto"
        # -- The name of an existing secret to use.
        # @section -- Configuration parameters
        existingSecret: ""
        secretKeys:
          # -- The Google client ID key to use from an existing secret.
          # @section -- Configuration parameters
          googleClientIDKey: ""
          # -- The Google client secret key to use from an existing secret.
          # @section -- Configuration parameters
          googleClientSecretKey: ""
          # -- The GitHub client ID key to use from an existing secret.
          # @section -- Configuration parameters
          githubClientIDKey: ""
          # -- The GitHub client secret key to use from an existing secret.
          # @section -- Configuration parameters
          githubClientSecretKey: ""
          # -- The GitLab client ID key to use from an existing secret.
          # @section -- Configuration parameters
          gitlabClientIDKey: ""
          # -- The GitLab client secret key to use from an existing secret.
          # @section -- Configuration parameters
          gitlabClientSecretKey: ""
          # -- The OpenID Connect client ID key to use from an existing secret.
          # @section -- Configuration parameters
          oidcClientIDKey: ""
          # -- The OpenID Connect client secret key to use from an existing secret.
          # @section -- Configuration parameters
          oidcClientSecretKey: ""

      autoFileSnapshot:
        # -- How many changes before generating a new snapshot. You also need to add the 'auto-file-snapshot' flag to the PENPOT_FLAGS variable.
        # @section -- Configuration parameters
        every: 5  # Every 5 changes
        # -- If there isn't a snapshot during this time, the system will generate one automatically. You also need to add the 'auto-file-snapshot' flag to the PENPOT_FLAGS variable.
        # @section -- Configuration parameters
        timeout: "3h"

    persistence:
      assets:
        enabled: true
        storageClass: truenas-ssd-nfs
        accessModes:
          - ReadWriteMany
      exporter:
        enabled: true
        storageClass: truenas-ssd-nfs
        accessModes:
          - ReadWriteMany

    ingress:
      enabled: true
      className: nginx
      hosts:
        - &host penpot.${CLUSTER_DOMAIN}
      tls:
      - secretName: letsencrypt-wildcard-cert-prod
        hosts:
        - *host