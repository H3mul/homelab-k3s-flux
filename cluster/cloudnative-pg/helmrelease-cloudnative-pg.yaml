apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudnative-pg
  namespace: cloudnative-pg
spec:
  chart:
    spec:
      chart: cloudnative-pg
      version: 0.23.0
      sourceRef:
        kind: HelmRepository
        name: cloudnative-pg
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: cloudnative-pg
  values:
    # Pasted from
    # https://github.com/cloudnative-pg/charts/blob/39c99bc63cb2f97e2d2895484da2bbec0ee6c71f/charts/cloudnative-pg/values.yaml

    #
    # Copyright The CloudNativePG Contributors
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    # Default values for CloudNativePG.
    # This is a YAML-formatted file.
    # Please declare variables to be passed to your templates.

    replicaCount: 1

    image:
      repository: ghcr.io/cloudnative-pg/cloudnative-pg
      pullPolicy: IfNotPresent
      # -- Overrides the image tag whose default is the chart appVersion.

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    crds:
      # -- Specifies whether the CRDs should be created when installing the chart.
      create: true

    # -- The webhook configuration.
    webhook:
      port: 9443
      mutating:
        create: true
        failurePolicy: Fail
      validating:
        create: true
        failurePolicy: Fail
      livenessProbe:
        initialDelaySeconds: 3
      readinessProbe:
        initialDelaySeconds: 3

    # -- Operator configuration.
    config:
      # -- Specifies whether the secret should be created.
      create: true
      # -- The name of the configmap/secret to use.
      name: cnpg-controller-manager-config
      # -- Specifies whether it should be stored in a secret, instead of a configmap.
      secret: false
      # -- The content of the configmap/secret, see
      # https://cloudnative-pg.io/documentation/current/operator_conf/#available-options
      # for all the available options.
      data: {}
      # INHERITED_ANNOTATIONS: categories
      # INHERITED_LABELS: environment, workload, app
      # WATCH_NAMESPACE: namespace-a,namespace-b

    # -- Additinal arguments to be added to the operator's args list.
    additionalArgs: []

    serviceAccount:
      # -- Specifies whether the service account should be created.
      create: true
      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template.
      name: ""

    rbac:
      # -- Specifies whether ClusterRole and ClusterRoleBinding should be created.
      create: true

    # -- Annotations to be added to all other resources.
    commonAnnotations: {}
    # -- Annotations to be added to the pod.
    podAnnotations: {}
    # -- Labels to be added to the pod.
    podLabels: {}

    # -- Container Security Context.
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 10001
      runAsGroup: 10001
      capabilities:
        drop:
          - "ALL"

    # -- Security Context for the whole pod.
    podSecurityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000

    # -- Priority indicates the importance of a Pod relative to other Pods.
    priorityClassName: ""

    service:
      type: ClusterIP
      # -- DO NOT CHANGE THE SERVICE NAME as it is currently used to generate the certificate
      # and can not be configured
      name: cnpg-webhook-service
      port: 443

    resources: {}
      # If you want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      #
      # limits:
      #   cpu: 100m
      #   memory: 200Mi
      # requests:
      #   cpu: 100m
      #   memory: 100Mi

    # -- Nodeselector for the operator to be installed.
    nodeSelector: {}

    # -- Tolerations for the operator to be installed.
    tolerations: []

    # -- Affinity for the operator to be installed.
    affinity: {}

    monitoring:
      # -- Specifies whether the monitoring should be enabled. Requires Prometheus Operator CRDs.
      podMonitorEnabled: false

    # Default monitoring queries
    # monitoringQueriesConfigMap: