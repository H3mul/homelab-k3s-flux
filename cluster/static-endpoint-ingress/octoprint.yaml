apiVersion: v1
kind: Endpoints
metadata:
  name: octoprint
  namespace: static-endpoint-ingress
subsets: 
  - addresses:
      - ip: "10.1.1.158" 
    ports:
      - port: 5000 
        name: "http"
      - port: 8080
        name: "cam"

---

apiVersion: v1
kind: Service
metadata:
  name: octoprint
  namespace: static-endpoint-ingress
spec:
  ports:
  - name: octoprint
    protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 0
  - name: octoprint-cam
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 0
selector: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: octoprint-cam
  namespace: static-endpoint-ingress
spec:
  ingressClassName: nginx
  tls:
  - secretName: letsencrypt-wildcard-cert-prod
    hosts:
    - &host octoprint-cam.${CLUSTER_DOMAIN}
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: octoprint
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: octoprint
  namespace: static-endpoint-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 0
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Scheme $scheme;

spec:
  ingressClassName: nginx
  tls:
  - secretName: letsencrypt-wildcard-cert-prod
    hosts:
    - &host octoprint.${CLUSTER_DOMAIN}
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: octoprint
            port:
              number: 5000