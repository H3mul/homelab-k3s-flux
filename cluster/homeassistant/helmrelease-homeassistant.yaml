apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: homeassistant
  namespace: homeassistant
spec:
  chart:
    spec:
      chart: app-template
      version: 4.0.x
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: homeassistant
  values:
    global:
      nameOverride: homeassistant
    controllers:
      homeassistant:
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.7.2@sha256:1ccea0e903924bb3198f130b4018ff27315b03fbbe343c3f4aee289b5050660e
            env:
              TZ: ${TIMEZONE}
              LD_LIBRARY_PATH: /usr/lib
              HOME_ASSISTANT__HACS_INSTALL: true

            securityContext:
              runAsUser: ${FILESHARE_USER_ID}
              runAsGroup: ${FILESHARE_GROUP_ID}
              fsGroup: ${FILESHARE_GROUP_ID}
              fsGroupChangePolicy: "OnRootMismatch"

          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: "4.101.2@sha256:5f654c1137f8d87c8cf44253318bf94b85f6f9129e426a9956da46eb602dcc5a"
            envFrom:
              - secretRef:
                  name: code-server-password
            args:
              - --auth
              - password
              - --user-data-dir
              - /config/.vscode
              - --extensions-dir
              - /config/.vscode
              - --port
              - &codeServerPort "8081"
              - /config

            securityContext:
              runAsUser: ${FILESHARE_USER_ID}
              runAsGroup: ${FILESHARE_GROUP_ID}
              fsGroup: ${FILESHARE_GROUP_ID}
              fsGroupChangePolicy: "OnRootMismatch"

    service:
      main:
        controller: homeassistant
        ports:
          http:
            port: 8123

      code-server:
        controller: homeassistant
        ports:
          http:
            port: *codeServerPort

    serviceMonitor:
      main:
        enabled: true
        serviceName: homeassistant-main
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            authorization:
              type: Bearer
              credentials:
                name: hass-prometheus-token
                key: TOKEN

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
        hosts:
          - host: &main-host hass.${CLUSTER_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
        - secretName: letsencrypt-wildcard-cert-prod
          hosts:
          - *main-host

      code-server:
        className: nginx
        hosts:
          - host: &code-host hass-code.${CLUSTER_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: code-server
                  port: http
        tls:
        - secretName: letsencrypt-wildcard-cert-prod
          hosts:
          - *code-host

    configMaps:
      config:
        data:
          configuration.yaml: |
            # Generated from ConfigMap

            # Loads default set of integrations. Do not remove.
            default_config:

            # Load frontend themes from the themes folder
            frontend:
              themes: !include_dir_merge_named themes

            prometheus:
              namespace: hass

            # Text to speech
            tts:
              - platform: google_translate

            http:
              use_x_forwarded_for: true
              trusted_proxies:
                - 0.0.0.0/0
                - 10.244.0.0/24

            homeassistant:
              allowlist_external_dirs:
                - /config/media
              media_dirs:
                media: /config/media

            automation: !include automations.yaml
            script: !include scripts.yaml
            scene: !include scenes.yaml   


    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        size: 6Gi
        storageClass: truenas-ssd-nfs
        accessMode: ReadWriteMany
        globalMounts:
          - path: /config

      media:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: homeassistant-media
        globalMounts:
          - path: /config/media

      config-yaml:
        enabled: true
        type: configMap
        name: homeassistant
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
